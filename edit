<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Upload and Edit Form</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        .container {
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f0f0f0;
            border: 1px solid #ccc;
            border-radius: 10px;
        }
        label {
            display: block;
            margin-bottom: 10px;
            font-weight: bold;
        }
        input[type="file"] {
            margin-bottom: 20px;
        }
        textarea {
            width: 100%;
            height: 200px;
            padding: 10px;
            font-size: 14px;
            border: 1px solid #ccc;
            border-radius: 5px;
            resize: vertical;
        }
        .button-container {
            text-align: center;
            margin-top: 20px;
        }
        .button-container button {
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Upload and Edit Form</h2>
        <form id="uploadForm" enctype="multipart/form-data">
            <label for="jsonFile">Upload JSON File:</label>
            <input type="file" id="jsonFile" name="jsonFile" accept=".json" required>
            <div class="button-container">
                <button type="submit">Upload & Edit</button>
            </div>
        </form>
        <hr>
        <div id="formEditor" style="display: none;">
            <h3>Edit Form Data</h3>
            <form id="editForm">
                <!-- Form fields will be populated dynamically here -->
                <div class="button-container">
                    <button type="button" id="saveEditedForm">Save Edited Form</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        document.getElementById('uploadForm').addEventListener('submit', function(event) {
            event.preventDefault();
            const fileInput = document.getElementById('jsonFile');
            const file = fileInput.files[0];

            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    try {
                        const formData = JSON.parse(e.target.result);
                        populateForm(formData);
                    } catch (error) {
                        alert('Invalid JSON file. Please upload a valid JSON file.');
                        console.error(error);
                    }
                };
                reader.readAsText(file);
            }
        });

        function populateForm(formData) {
            const editForm = document.getElementById('editForm');

            // Clear previous form fields
            editForm.innerHTML = '';

            // Dynamically create form fields based on formData
            Object.keys(formData).forEach(key => {
                const label = document.createElement('label');
                label.textContent = key;
                const input = document.createElement('textarea');
                input.name = key;
                input.value = formData[key];
                editForm.appendChild(label);
                editForm.appendChild(input);
            });

            // Show the form editor
            document.getElementById('formEditor').style.display = 'block';
        }

        document.getElementById('saveEditedForm').addEventListener('click', function() {
            const editedFormData = {};
            const formElements = document.getElementById('editForm').elements;

            // Collect edited form data
            for (let i = 0; i < formElements.length; i++) {
                if (formElements[i].tagName === 'TEXTAREA') {
                    editedFormData[formElements[i].name] = formElements[i].value;
                }
            }

            // Convert edited form data to JSON string
            const editedJson = JSON.stringify(editedFormData, null, 2);

            // Create a blob and download link for edited JSON
            const blob = new Blob([editedJson], { type: 'application/json' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'edited_questionnaire.json';
            a.click();
            URL.revokeObjectURL(url);

            alert('Edited form data saved as edited_questionnaire.json');
        });
    </script>
</body>
</html>
